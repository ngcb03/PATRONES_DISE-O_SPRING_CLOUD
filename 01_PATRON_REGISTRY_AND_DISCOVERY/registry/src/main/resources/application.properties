spring.application.name = eureka-server
server.port = 8761

eureka.client.register-with-eureka = false
eureka.client.fetch-registry = false

eureka.instance.lease-renewal-interval-in-seconds = 0

# spring.application.name=nombre-aplicacion: Sirve para
# establecer el nombre de una determinada aplicación de Spring Boot.

# server.port: Sirve para establecer el puerto en el cual queremos que
# se levante la aplicación. El puerto por defecto que vamos a utilizar
# para Eureka Server es el 8761

# eureka.client.register-with-eureka=false: establece al cliente Eureka
# si debe registrarse automáticamente en Eureka Server o no. Si se
# establece en false, la aplicación no se registrará, es decir, no
# será «visible» para otros servicios. Esto podría ser útil en situaciones
# específicas, por ejemplo, si tenés una aplicación que no necesita
# ser descubierta por otras.

# eureka.client.fetch-registry=false: Esta configuración indica al
# cliente Eureka si debe obtener el registro de servicios desde Eureka
# Server. Si se establece en false, la aplicación no buscará la lista
# de servicios registrados en el servidor de Eureka. Esto podría ser
# útil si un servicio no necesita conocer a otros y solo procede a registrarse.

# eureka.instance.lease-renewal-interval-in-seconds: Determina con qué frecuencia
# el cliente Eureka renovará su «contrato» con el servidor de Eureka. En términos
# más simples, es como si el cliente (nuestro servicio conversor de metros) le
# dijera periódicamente al servidor: «¡Hola, todavía estoy acá y funcionando
# correctamente por si me necesistás!». Esto es esencial para que nuestro Eureka Server
# sepa que el servicio está activo y en funcionamiento.